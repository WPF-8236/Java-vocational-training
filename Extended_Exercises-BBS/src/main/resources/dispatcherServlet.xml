<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--springmvc配置文件，声明controller和其他web相关对象-->
    <context:component-scan base-package="com.WPF.controller"/>
    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--注解驱动
    1.响应ajax请求，返回json
    2.解决静态资源访问问题
    -->
    <!--第一种处理静态资源方式：
       需要在springmvc配置文件加入<mvc :default-servlet-handler>
       原理是︰加入这个标签后，框架会创健控制器对象DefaultServletHttpRequestHandler(类似我们自己创建的myController )
       DefaultServletHttpRequestHandler这个对象可以把接收的请求转发给 tomcat的default这个servlet。
       -->
    <!-- default-servlet-handler和 @RequestMapping注解有冲突，需要加入annotation-driven 解决问题-->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <aop:aspectj-autoproxy/>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <!--指定拦截的请求uri地址，可以使用通配符**：任意字符，文件，多级目录-->
            <mvc:mapping path="/login"/>
            <bean class="com.WPF.handler.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>